{"ast":null,"code":"var _jsxFileName = \"/home/mearaf/Projects/ReactApps/flocash-checkout/express-check-out/src/FormCheckout.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport countryList from 'react-select-country-list';\nimport SelectCurrency from 'react-select-currency';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cList = countryList().getData();\n\nconst selectedCurrency = currency => {\n  this.setState({\n    currency\n  });\n};\n\nconst defaultState = {\n  merchant: '',\n  apiUsername: '',\n  apiUserPassword: '',\n  orderId: '',\n  product: '',\n  price: '',\n  currency: '',\n  quantity: '',\n  custom: '',\n  amount: '',\n  country: null,\n  firstname: '',\n  lastname: '',\n  mobile: '',\n  email: '',\n  //-------------------\n  formErors: {\n    merchantError: '',\n    apiUsernameError: '',\n    apiUserPasswordError: '',\n    orderIdError: '',\n    productError: '',\n    priceError: '',\n    currencyError: '',\n    quantityError: '',\n    customError: '',\n    amountError: '',\n    countryError: null,\n    firstnameError: '',\n    lastnameError: '',\n    mobileError: '',\n    emailError: ''\n  }\n};\nexport default class FormCheckout extends Component {\n  //state = defaultState\n  constructor(props) {\n    super(props);\n    this.emailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n    this.passwordRegex = RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.&[A-Z])[0-9a-zA-Z]{8,}$/);\n\n    this.validate = () => {\n      const checker = false;\n\n      if (!this.state.merchant.match(/^[a-zA-Z0-9]*$/)) {\n        this.state.merchantError = \"invalid merchant name\";\n        console.log(this.merchantError); //this.setState({})\n\n        checker = false;\n      }\n\n      if (!this.state.apiUsername.match(/^[a-zA-Z]*$/)) {\n        this.state.apiUsernameError = \"invalid api user name\"; //this.setState({apiUsernameError})\n        //console.log(this.state.apiUsernameError)\n\n        checker = false;\n      }\n      /*\n      if(!this.state.apiUserPassword.match(this.passwordRegex)){\n          apiUserPasswordError = \"invalid merchant name\"\n          this.setState({apiUserPasswordError})\n          return false\n      }\n      \n      if(!this.state.orderId.match(/^[0-9]*$/)){\n          orderIdError = \"invalid merchant name\"\n          this.setState({orderIdError})\n          return false\n      }\n           \n      if(!this.state.product.match(/^[a-zA-Z0-9]*$/)){\n          productError = \"invalid product name\"\n          this.setState({productError})\n          return false\n      }\n      if(!this.state.price.match(/^[0-9]*$/)){\n          priceError = \"invalid price \"\n          this.setState({priceError})\n          return false\n      }\n      if(!this.state.quantity.match(/^[0-9]*$/)){\n          quantityError = \"invalid quantity \"\n          this.setState({quantityError})\n          return false\n      }\n      if(!this.state.custom){\n          customError = \"invalid custom \"\n          this.setState({customError})\n          return false\n      }\n      if(!this.state.amount.match(/^[0-9]*$/)){\n          amountError = \"invalid amount \"\n          this.setState({amountError})\n          return false\n      }\n              if(!this.state.country.match(/^[A-Z]*$/)){\n          countryError = \"invalid country code\"\n          this.setState({countryError})\n          return false\n      }\n      \n      if(!this.state.firstname.match(/^[a-zA-Z]*$/)){\n          firstnameError = \"invalid first name\"\n          this.setState({firstnameError})\n          return false\n      }\n      if(!this.state.lastname.match(/^[a-zA-Z]*$/)){\n          lastnameError = \"invalid last name\"\n          this.setState({lastnameError})\n          return false\n      }\n      if(!this.state.mobile.match(/^[0-9]*$/)){\n          mobileError = \"phone number should at least have 12 nubers\"\n          this.setState({mobileError})\n          return false;\n      }\n       if(!this.state.email.match(this.emailRegex)){\n          emailError = \"invalid email\"\n          this.setState({emailError})\n          return false;\n      }*/\n\n\n      return checker;\n    };\n\n    this.isValid = formErrors => {\n      //begin cheking\n      let valid = true;\n      Object.values(formErrors).forEach(errors => {\n        errors.length >= 0 && (valid = false);\n      });\n      return valid;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //const isValid = this.validate;\n\n      if (this.isValid) {\n        console.log(this.state);\n        this.setState({\n          defaultState\n        });\n      } else {\n        console.log(this.state.formErors);\n      }\n    };\n\n    this.handleChange = e => {\n      /* this.setState({\n           [e.target.id]:e.target.value\n       },()=>{\n           //console.log(this.state);\n       })*/\n      e.preventDefault();\n      console.log(this.state);\n      const emailRegExp = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstNameError = value.length < 3 ? \"minmum 3 charachters\" : \"\";\n          break;\n\n        case \"lastName\":\n          formErrors.lastNameError = value.length < 3 ? \"minmum 3 charachters\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.emailError = emailRegExp.test(value) && value.length < 0 ? \"eamil is invalid\" : \"\";\n          break;\n\n        case \"password\":\n          formErrors.passwordError = value.length < 8 ? \"minmum 8 charachters\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.selectedCurrency = currency => {\n      this.setState({\n        currency\n      });\n    };\n\n    this.handleSelectChange = country => {\n      this.setState({\n        country\n      });\n      console.log(`Option selected:`, country);\n    };\n\n    this.state = defaultState;\n  } //to keep the state\n  // this.handleSubmit = this.handleSubmit.bind(this)\n\n\n  render() {\n    const {\n      country\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content-right\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Express Check out \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Merchant Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"merchant\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"merchant\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \"Merchant\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 20\n        }, this), this.setState.merchantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.merchantError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"apiUsername\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"apiUsername\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \"Api Username\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 20\n        }, this), this.setState.merchantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.apiUsernameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"apiUserPassword\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"apiUserPassword\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \"API User password\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 20\n        }, this), this.setState.merchantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.apiUserPasswordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Order Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"orderId\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"orderId\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \"Order Id\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 20\n        }, this), this.setState.merchantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.orderIdError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"product\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"product\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \"Product\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 20\n        }, this), this.setState.merchantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.productError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"price\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \"Price\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 20\n        }, this), this.setState.mearachantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.priceError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"currency\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(SelectCurrency, {\n              value: 'USD',\n              onCurrencySelected: selectedCurrency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 20\n        }, this), this.setState.mearachantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.customError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"quantity\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"quantity\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \"Quantity\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 20\n        }, this), this.setState.mearachantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.quantityError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"custom\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"custom\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \"Custom\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 20\n        }, this), this.setState.mearachantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.customError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"amount\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \"Amount\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 20\n        }, this), this.setState.mearachantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.amountError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Payer Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"country\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"---- select country ----\",\n              options: cList,\n              value: country,\n              onChange: this.handleSelectChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 20\n        }, this), this.setState.mearachantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.countryError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstname\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"firstname\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \"Firstname\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 20\n        }, this), this.setState.mearachantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.firstnameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastname\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"lastname\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \"Lastname\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 20\n        }, this), this.setState.mearachantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.lastnameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"mobile\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"phone\",\n              name: \"mobile\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \"Mobile\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 20\n        }, this), this.setState.mearachantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.mobileError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-lable\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              className: \"form-input\",\n              required: \"true\",\n              placeholder: \" Email\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 20\n        }, this), this.setState.mearachantError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-error\",\n          children: this.state.emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please make sure you have filled the required information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-input-btn\",\n          type: \"submit\",\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/mearaf/Projects/ReactApps/flocash-checkout/express-check-out/src/FormCheckout.js"],"names":["React","Component","Select","countryList","SelectCurrency","cList","getData","selectedCurrency","currency","setState","defaultState","merchant","apiUsername","apiUserPassword","orderId","product","price","quantity","custom","amount","country","firstname","lastname","mobile","email","formErors","merchantError","apiUsernameError","apiUserPasswordError","orderIdError","productError","priceError","currencyError","quantityError","customError","amountError","countryError","firstnameError","lastnameError","mobileError","emailError","FormCheckout","constructor","props","emailRegex","RegExp","passwordRegex","validate","checker","state","match","console","log","isValid","formErrors","valid","Object","values","forEach","errors","length","handleSubmit","event","preventDefault","handleChange","e","emailRegExp","name","value","target","firstNameError","lastNameError","test","passwordError","handleSelectChange","render","mearachantError"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport Select from 'react-select'\nimport countryList from 'react-select-country-list'\nimport SelectCurrency from 'react-select-currency'\n\n\n\nconst cList = countryList().getData()\nconst selectedCurrency = currency => {\n    this.setState({currency})\n}\nconst defaultState={\n        merchant : '',\n        apiUsername:'',\n        apiUserPassword:'',\n\n        orderId:'',\n        product:'',\n        price:'',\n        currency: '',\n        quantity:'',\n        custom: '',\n        amount:'',\n\n        country: null,\n        firstname:'',\n        lastname:'',\n        mobile: '',\n        email: '',\n        //-------------------\n        formErors:  {\n            merchantError: '',\n        apiUsernameError:'',\n        apiUserPasswordError:'',\n\n        orderIdError:'',\n        productError:'',\n        priceError:'',\n        currencyError: '',\n        quantityError:'',\n        customError: '',\n        amountError:'',\n\n        countryError: null,\n        firstnameError:'',\n        lastnameError:'',\n        mobileError: '',\n        emailError:'',\n        }\n        \n}\n\n\nexport default class FormCheckout extends Component{\n    //state = defaultState\n\n    constructor(props) {\n        super(props);\n        this.state = defaultState\n    }\n            //to keep the state\n       // this.handleSubmit = this.handleSubmit.bind(this)\n    \n\n    emailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n    passwordRegex = RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.&[A-Z])[0-9a-zA-Z]{8,}$/)\n    //currencyRegex = RegExp(/^(?=.*\\d)(?=.&[A-Z])*{3}$/)\n    validate = () =>{\n        const checker = false;\n        \n        if(!this.state.merchant.match(/^[a-zA-Z0-9]*$/)){\n            this.state.merchantError = \"invalid merchant name\"\n            console.log(this.merchantError)\n            //this.setState({})\n            checker = false\n        }\n        \n        if(!this.state.apiUsername.match(/^[a-zA-Z]*$/)){\n            this.state.apiUsernameError = \"invalid api user name\"\n            //this.setState({apiUsernameError})\n            //console.log(this.state.apiUsernameError)\n            checker = false\n        }\n        /*\n        if(!this.state.apiUserPassword.match(this.passwordRegex)){\n            apiUserPasswordError = \"invalid merchant name\"\n            this.setState({apiUserPasswordError})\n            return false\n        }\n       \n\n        if(!this.state.orderId.match(/^[0-9]*$/)){\n            orderIdError = \"invalid merchant name\"\n            this.setState({orderIdError})\n            return false\n        }\n       \n     \n        if(!this.state.product.match(/^[a-zA-Z0-9]*$/)){\n            productError = \"invalid product name\"\n            this.setState({productError})\n            return false\n        }\n        if(!this.state.price.match(/^[0-9]*$/)){\n            priceError = \"invalid price \"\n            this.setState({priceError})\n            return false\n        }\n        if(!this.state.quantity.match(/^[0-9]*$/)){\n            quantityError = \"invalid quantity \"\n            this.setState({quantityError})\n            return false\n        }\n        if(!this.state.custom){\n            customError = \"invalid custom \"\n            this.setState({customError})\n            return false\n        }\n        if(!this.state.amount.match(/^[0-9]*$/)){\n            amountError = \"invalid amount \"\n            this.setState({amountError})\n            return false\n        }\n       \n        if(!this.state.country.match(/^[A-Z]*$/)){\n            countryError = \"invalid country code\"\n            this.setState({countryError})\n            return false\n        }\n        \n        if(!this.state.firstname.match(/^[a-zA-Z]*$/)){\n            firstnameError = \"invalid first name\"\n            this.setState({firstnameError})\n            return false\n        }\n        if(!this.state.lastname.match(/^[a-zA-Z]*$/)){\n            lastnameError = \"invalid last name\"\n            this.setState({lastnameError})\n            return false\n        }\n        if(!this.state.mobile.match(/^[0-9]*$/)){\n            mobileError = \"phone number should at least have 12 nubers\"\n            this.setState({mobileError})\n            return false;\n        }\n\n        if(!this.state.email.match(this.emailRegex)){\n            emailError = \"invalid email\"\n            this.setState({emailError})\n            return false;\n        }*/\n        return checker;     \n        \n       \n\n    }\n    isValid = (formErrors) => {\n        //begin cheking\n        let valid = true;\n        Object.values(formErrors).forEach( errors => {\n            (errors.length >= 0) && (valid = false)\n        } );\n\n        return valid;\n    }\n\n    handleSubmit=(event)=>{\n        event.preventDefault();\n        //const isValid = this.validate;\n        if(this.isValid){\n            console.log(this.state)\n            this.setState({defaultState})\n        }   \n        else{\n            console.log(this.state.formErors)\n        }\n    }\n\n    handleChange=(e)=>{\n       /* this.setState({\n            [e.target.id]:e.target.value\n        },()=>{\n            //console.log(this.state);\n        })*/\n        e.preventDefault();\n        console.log(this.state)\n        const emailRegExp = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n        const {name, value} = e.target;\n        let formErrors =  this.state.formErrors;\n\n        switch(name){\n            case \"firstName\": \n                formErrors.firstNameError = value.length < 3 ? \"minmum 3 charachters\" : \"\";\n            break;\n\n            case \"lastName\": \n                formErrors.lastNameError = value.length < 3 ? \"minmum 3 charachters\" : \"\";\n            break;\n\n            case \"email\": \n                 formErrors.emailError = emailRegExp.test(value) && value.length < 0 ? \"eamil is invalid\" : \"\";\n            break;\n\n            case \"password\": \n            formErrors.passwordError = value.length < 8 ? \"minmum 8 charachters\" : \"\";\n            break;\n\n            default: \n            break;\n        }\n        this.setState({formErrors, [name]: value}, ()=>{\n            console.log(this.state)\n        });\n        \n    }\n   \n    selectedCurrency = currency => {\n        this.setState({ currency });\n    }\n\n    handleSelectChange = country => {\n        this.setState({ country });\n        console.log(`Option selected:`, country);\n      };\n\n    \n    render(){\n        const { country } = this.state;\n        return (\n            <div className=\"form-content-right\">\n               <form className=\"form\"  onSubmit={this.handleSubmit}>\n                   <h1> Express Check out </h1>\n\n                   \n                    <h3>Merchant Info</h3>\n\n                   <div className=\"form-input\">\n                        <label htmlFor=\"merchant\" className=\"form-lable\">\n                            <input type=\"text\" name=\"merchant\" className=\"form-input\" required=\"true\" placeholder=\"Merchant\" onChange={this.handleChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.merchantError?(\n                        <div className=\"from-error\">{this.state.merchantError}</div>\n                       ):\n                       null\n                   }\n                   \n                   <div className=\"form-input\">\n                        <label htmlFor=\"apiUsername\" className=\"form-lable\">\n                            <input type=\"text\" name=\"apiUsername\" className=\"form-input\" required=\"true\" placeholder=\"Api Username\" onChange={this.handleChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.merchantError?(\n                        <div className=\"from-error\">{this.state.apiUsernameError}</div>\n                       ):\n                       null\n                   }\n\n                   <div className=\"form-input\">\n                        <label htmlFor=\"apiUserPassword\" className=\"form-lable\">\n                            <input type=\"password\" name=\"apiUserPassword\" className=\"form-input\" required=\"true\" placeholder=\"API User password\" onChange={this.handleChange}/>\n                        </label>\n                   </div>  \n                   {\n                       this.setState.merchantError?(\n                        <div className=\"from-error\">{this.state.apiUserPasswordError}</div>\n                       ):\n                       null\n                   }          \n            \n\n                   <h3>Order Info</h3>\n\n                   <div className=\"form-input\">\n                        <label htmlFor=\"orderId\" className=\"form-lable\">\n                            <input type=\"text\" name=\"orderId\" className=\"form-input\" required=\"true\" placeholder=\"Order Id\" onChange={this.handleChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.merchantError?(\n                        <div className=\"from-error\">{this.state.orderIdError}</div>\n                       ):\n                       null\n                   }\n\n                   <div className=\"form-input\">\n                        <label htmlFor=\"product\" className=\"form-lable\">\n                            <input type=\"text\" name=\"product\" className=\"form-input\" required=\"true\" placeholder=\"Product\" onChange={this.handleChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.merchantError?(\n                        <div className=\"from-error\">{this.state.productError}</div>\n                       ):\n                       null\n                   }\n\n                   <div className=\"form-input\">\n                        <label htmlFor=\"price\" className=\"form-lable\">\n                            <input type=\"text\" name=\"price\" className=\"form-input\" required=\"true\" placeholder=\"Price\" onChange={this.handleChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.mearachantError?(\n                        <div className=\"from-error\">{this.state.priceError}</div>\n                       ):\n                       null\n                   }\n                                   \n                   <div className=\"form-input\">\n                        <label htmlFor=\"currency\" className=\"form-lable\">\n                            <SelectCurrency value={'USD'} onCurrencySelected={selectedCurrency} />\n                            \n                        </label>\n                   </div>\n                   {\n                       this.setState.mearachantError?(\n                        <div className=\"from-error\">{this.state.customError}</div>\n                       ):\n                       null\n                   }\n\n                   <div className=\"form-input\">\n                        <label htmlFor=\"quantity\" className=\"form-lable\">\n                            <input type=\"text\" name=\"quantity\" className=\"form-input\" required=\"true\" placeholder=\"Quantity\" onChange={this.handleChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.mearachantError?(\n                        <div className=\"from-error\">{this.state.quantityError}</div>\n                       ):\n                       null\n                   }\n                   \n                   <div className=\"form-input\">\n                        <label htmlFor=\"custom\" className=\"form-lable\">\n                            <input type=\"text\" name=\"custom\" className=\"form-input\" required=\"true\" placeholder=\"Custom\" onChange={this.handleChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.mearachantError?(\n                        <div className=\"from-error\">{this.state.customError}</div>\n                       ):\n                       null\n                   }\n\n                   <div className=\"form-input\">\n                        <label htmlFor=\"amount\" className=\"form-lable\">\n                            <input type=\"text\" name=\"amount\" className=\"form-input\" required=\"true\" placeholder=\"Amount\" onChange={this.handleChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.mearachantError?(\n                        <div className=\"from-error\">{this.state.amountError}</div>\n                       ):\n                       null\n                   }\n\n\n                   <h3>Payer Info</h3>\n\n                   <div className=\"form-input\">\n                        \n                        <label htmlFor=\"country\" className=\"form-lable\">\n                        <Select placeholder=\"---- select country ----\" options={cList} value={country} onChange={this.handleSelectChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.mearachantError?(\n                        <div className=\"from-error\">{this.state.countryError}</div>\n                       ):\n                       null\n                   }\n\n                   <div className=\"form-input\">\n                        <label htmlFor=\"firstname\" className=\"form-lable\">\n                            <input type=\"text\" name=\"firstname\" className=\"form-input\" required=\"true\" placeholder=\"Firstname\" onChange={this.handleChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.mearachantError?(\n                        <div className=\"from-error\">{this.state.firstnameError}</div>\n                       ):\n                       null\n                   }\n\n                   <div className=\"form-input\">\n                        <label htmlFor=\"lastname\" className=\"form-lable\">\n                            <input type=\"text\" name=\"lastname\" className=\"form-input\" required=\"true\" placeholder=\"Lastname\" onChange={this.handleChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.mearachantError?(\n                        <div className=\"from-error\">{this.state.lastnameError}</div>\n                       ):\n                       null\n                   }\n\n                   <div className=\"form-input\">\n                        <label htmlFor=\"mobile\" className=\"form-lable\">\n                            <input type=\"phone\" name=\"mobile\" className=\"form-input\" required=\"true\" placeholder=\"Mobile\" onChange={this.handleChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.mearachantError?(\n                        <div className=\"from-error\">{this.state.mobileError}</div>\n                       ):\n                       null\n                   }\n                   \n                   <div className=\"form-input\">\n                        <label htmlFor=\"email\" className=\"form-lable\">\n                            <input type=\"email\" name=\"email\" className=\"form-input\" required=\"true\" placeholder=\" Email\" onChange={this.handleChange}/>\n                        </label>\n                   </div>\n                   {\n                       this.setState.mearachantError?(\n                        <div className=\"from-error\">{this.state.emailError}</div>\n                       ):\n                       null\n                   }\n\n                   <p>Please make sure you have filled the required information</p>\n                   \n                   <button className=\"form-input-btn\" type=\"submit\">Checkout</button>\n                </form>\n                \n            </div>\n        )\n      }\n    \n}\n"]},"metadata":{},"sourceType":"module"}